/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views.busqueda;

import controllers.ControladorDeTrabajadores;
import controllers.ControladorDepartamentos;
import controllers.ControladorJefesDeDepartamento;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;
import models.Departamentos;
import models.JefesDelDepartamento;
import models.Trabajadores;
import views.MainActivity;
import views.actualizaciones.ActualizacionDepartamento;
import views.actualizaciones.ActualizacionTrabajador;
import views.actualizaciones.ActualizarJefe;
import views.altas.AltaDepartamento;
import views.bajas.BajaDepartamento;
import views.bajas.BajaJefes;
import views.bajas.BajasTrabajadores;
import views.consultas.ConsultaDepartamento;
import views.consultas.ConsultasJefe;
import views.consultas.ConsultasTrabajador;

/**
 *
 * @author jared.hernandez
 */
public class BusquedaDepartamento extends javax.swing.JFrame {

    /**
     * Creates new form BajaDepartamento
     */
    private Timer timer;
    
    protected String operacion;
    protected String modelo;
    
    public BusquedaDepartamento() {
        initComponents();
    }
    
    public BusquedaDepartamento(String operacion, String modelo){
        initComponents();
        this.operacion = operacion;
        this.modelo = modelo;
        this.jTextField1.setText("");
        this.contenedor.setVisible(false);
        this.contenedor.setSize(100, 100);
        this.contenedor.setMaximumSize(new Dimension(100, 100));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        contenedor = new javax.swing.JPanel();
        mensaje = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 51, 0));
        jPanel1.setToolTipText("");

        jLabel1.setText("Buscar por Id");

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(103, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(116, 116, 116))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 14, Short.MAX_VALUE))
        );

        mensaje.setText("jLabel2");

        javax.swing.GroupLayout contenedorLayout = new javax.swing.GroupLayout(contenedor);
        contenedor.setLayout(contenedorLayout);
        contenedorLayout.setHorizontalGroup(
            contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contenedorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mensaje)
                .addContainerGap(138, Short.MAX_VALUE))
        );
        contenedorLayout.setVerticalGroup(
            contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contenedorLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(mensaje)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(contenedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(142, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(contenedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(87, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
        private class LimpiarMensaje implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            BusquedaDepartamento.this.mensaje.setText("");
            BusquedaDepartamento.this.contenedor.setVisible(false);
            BusquedaDepartamento.this.jTextField1.setText("");
            timer.stop();
        }
    }
     
     private void setMensaje(String msj) {
        this.mensaje.setText(msj);
        this.contenedor.setVisible(true);
        timer = new Timer(3000, new LimpiarMensaje());
        timer.start();
     }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        switch(operacion) {
            case "baja":
                switch(modelo){
                        case "departamento":
                            try{
                               Departamentos depto = ControladorDepartamentos.getDepartamentoById(this.jTextField1.getText());
                               BajaDepartamento bajaDepartamento = new BajaDepartamento(depto);
                                  this.setVisible(false);
                                  bajaDepartamento.setVisible(true);
                            }catch(NullPointerException ex ) {
                                this.setMensaje("No existe un departamento con ese ID");
                               
                            }
                            break;
                        case "trabajadores":
                             try{
                               Trabajadores trabajador = ControladorDeTrabajadores.getTrabajadoresById(this.jTextField1.getText());
                               BajasTrabajadores bajasTrabajador = new BajasTrabajadores(trabajador);
                               this.setVisible(false);
                               bajasTrabajador.setVisible(true);
                            }catch(NullPointerException ex ) {
                                this.setMensaje("No existe un trabajador con ese ID");
                               
                            }
                            break;
                            
                         case "jefes":
                             try{
                               JefesDelDepartamento jefeDepto = ControladorJefesDeDepartamento.getJefesDeDepartamentoById(this.jTextField1.getText());
                               BajaJefes bajasTrabajador = new BajaJefes(jefeDepto);
                               this.setVisible(false);
                               bajasTrabajador.setVisible(true);
                            }catch(NullPointerException ex ) {
                                this.setMensaje("No existe un trabajador con ese ID");
                               
                            }
                            break;
                         
                         
                }
                break;
            case "actualizacion":
                    switch(modelo){
                        case "departamento":
                            try {
                                Departamentos depto = ControladorDepartamentos.getDepartamentoById(this.jTextField1.getText());
                                ActualizacionDepartamento bajaDepartamento = new ActualizacionDepartamento(depto);

                                bajaDepartamento.setVisible(true);
                                
                                dispose();
                            }catch(NullPointerException ex) {
                                this.setMensaje("No existe un departamento con ese ID");
                            }
                           
                            break;
                            
                         case "trabajadores":
                             try{
                               Trabajadores trabajador = ControladorDeTrabajadores.getTrabajadoresById(this.jTextField1.getText());
                               ActualizacionTrabajador trabajadorA = new ActualizacionTrabajador(trabajador);
                               trabajadorA.setVisible(true);
                               dispose();
                              
                            }catch(NullPointerException ex ) {
                                this.setMensaje("No existe un trabajador con ese ID");
                               
                            }
                            break;
                            
                          case "jefes":
                             try{
                               JefesDelDepartamento jefeDepto = ControladorJefesDeDepartamento.getJefesDeDepartamentoById(this.jTextField1.getText());
                               ActualizarJefe aJefe = new ActualizarJefe(jefeDepto);
                            
                               aJefe.setVisible(true);
                               this.dispose();
                            }catch(NullPointerException ex ) {
                                this.setMensaje("No existe un trabajador con ese ID");
                               
                            }
                            break;
                }
                break;
            case "consulta":
                       switch(modelo){
                        case "departamento":
                            try {
                                Departamentos depto = ControladorDepartamentos.getDepartamentoById(this.jTextField1.getText());
                                ConsultaDepartamento consultaDepto = new ConsultaDepartamento(depto);
                                this.setVisible(false);
                                consultaDepto.setVisible(true); 
                            }catch (NullPointerException ex) {
                                this.setMensaje("No existe un departamento con ese ID");
                            }
                            break;
                            
                        case "trabajadores":
                             try{
                               Trabajadores trabajador = ControladorDeTrabajadores.getTrabajadoresById(this.jTextField1.getText());
                               ConsultasTrabajador trabajadorc = new ConsultasTrabajador(trabajador);
                               trabajadorc.setVisible(true);
                               dispose();
                              
                            }catch(NullPointerException ex ) {
                                this.setMensaje("No existe un trabajador con ese ID");
                               
                            }
                            break;
                            case "jefes":
                             try{
                               JefesDelDepartamento jefe = ControladorJefesDeDepartamento.getJefesDeDepartamentoById(this.jTextField1.getText());
                               ConsultasJefe consultaJ = new ConsultasJefe(jefe);
                               consultaJ.setVisible(true);
                               dispose();
                              
                            }catch(NullPointerException ex ) {
                                this.setMensaje("No existe un trabajador con ese ID");
                               
                            }
                            break;
                }
                break;
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        MainActivity main = new MainActivity();
        main.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BusquedaDepartamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BusquedaDepartamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BusquedaDepartamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BusquedaDepartamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BusquedaDepartamento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel contenedor;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel mensaje;
    // End of variables declaration//GEN-END:variables
}
